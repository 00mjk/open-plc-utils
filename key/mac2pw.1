.TH mac2pw 1 "November 2013" "open-plc-utils-0.0.3" "Qualcomm Atheros Open Powerline Toolkit"

.SH NAME
mac2pw - Qualcomm Atheros Ethernet Device Password Generator

.SH SYNOPSIS
.BR mac2pw
.RI [ options ] 
.IR address 
.RI [ address ]
[...] 

.SH DESCRIPTION
Print a range of consecutive Ethernet addresses and passwords on stdout suche that each device has a unique password.
Program output is suitable as input to the Qualcomm Atheros HomePlug AV Production Test System or may be used in custom production systems.
A starting address and an address range are specified.
Computed passwords consist of upper case letters and digits with optional group separators.
Output consists of address/password pairs in text format.

.PP
This program is designed to generate passwords for a large number of consecutive device addresses.
It complements program \fBmac2pwd\fR which generates passwords for non-consecutive device addresses occuring in unspecified order.

.PP
This program is part of the Qualcomm Atheros Powerline Toolkit.
See the \fBAMP\fR man page for an overview and installation instructions.

.SH CAVEATS
Atheros provides this program as a simple means of generating unique and apparently random device passwords for a large volume of Ethernet devices.
Two different password algorithms are implemented but neither one is required for HomePlug AV compliance.
Vendors are free to use other methods to generate their own device passwords and are encouraged to do so.

.TP 
Method 1
This method generates random passwords for each device based on system entropy. 
A different set of passwords is generated for a given address range with each program execution.
There is no correlation at between addresses and passwords.

This method is the most secure but requires care when programming and labelling devices at the factory.
It may be necessary to maintain a database if regular device maintenance and firmware upgrade are needed.

.TP 
Method 2
An optional method produces apparently random passwords based on device addresses.
The same set of passwords will be generated for a given address range with each program execution.
This method may be appropriate on system where regular maintenance and firmware upsates are required.

This method is less secure because device addresses can be determined using a variety of network management programs.
Anyone having access to this program, or the algorithm, could compute the device password and gain access to device features reserved for priviledged users.
This program does provide features to mitigate the risks of using this method.

.SH OPTIONS

.TP
-\fBb\fR \fIbunch\fR
The password bunching factor.
Passwords consists of \fIcount\fR uppercase letters and digits optionally displayed in groups separated by hyphens.
The bunching factor specifies the number of letters and digits in each group.
When \fibunch\fR is \fB0\fR or greater than \fIcount\fR, bunching is suppressed.
Any separating hyphens add to overall password length.
The minimum is \fB0\fR and the maximum is \fB255\fR.
The default is \fB0\fR which suppresses bunching.

When \fIbunch\fR is \fB0\fR, overall password length is \fIcount\fR.
When \fIbunch\fR is \fB1\fR, overall password length is twice \fIcount\fR because every other character will be a hyphen.

.TP
.RB - e
Compute passwords based on host system entropy.
Passwords consist of uppercase letters [A-Z] optionally grouped using option \fB-b\fR.
This method produces a repeatable set of unique, apparently random passwords over a given address range.
This method is the default and is more secure than method \fB-m\fR.

.TP
-\fBl \fIcount\fR
The number of letters in the password string.
Overall password length is the sum of \fIcount\fR plus the number of delimiters implied by \fIbunch\fR.
The minimum is \fB12\fR and the maximum is \fB64\fR.
The default is \fB16\fR.

.TP
.RB - m
Compute passwords based on target device address.
Passwords consist of uppercase letters [A-Z].
This method produces a repeatable set of unique and apparently random passwords over a given address range.
This method is less secure than the default method \fB-e\fR.

.TP
-\fBn \fInumber\fR
The number of consecutive addresses and passwords to compute and print.
The minimum is \fB0\fR and the maximum is \fB1677215\fR or 0xFFFFFF.
The default is \fB1\fR.
In addition, \fInumber\fR cannot exceed the remaining available addresses in the \fIvendor\fR range.
For example, given start address 00:B0:52:FF:FF:00, there are only 255 remaining addresses in the 00:B0:52 vendor range so it would be an error to request more than that number.

.TP
.RB - q
Quiet mode.
Exclude the device address on output.
This option can be used in scripts to return the password associated with a given device address.

.TP
.RB - v
Verbose mode.
Prefix each line with a '0' column.
The Atheros Production Test System (PTS) uses the first column of a password database file to indicate which addresses and passwords have already been used.

.TP
.RB - ? ,-- help
Print program help information on stdout.
This option takes precedence over other options on the command line.

.TP
.RB - ! ,-- version
Print program version information on stdout.
This option takes precedence over other options on the command line.
Use this option when sending screen dumps to Atheros Technical Support so that they know exactly which version of the Linux Toolkit you are using.

.SH ARGUMENTS

.TP
\fBaddress\fR
The first Ethernet address expressed as 12 consecutive hexadecimal digits.
Puncutation is not permitted.
The final address of the range is computed by adding \fBnumber\fR to this address.
This argument is required.
There is no default \fBaddress\fR.
If more than one device address is specified then an address/password series will be computed for each.

.SH EXAMPLES
The following example prints the given device address and associated password string on stdout.

.PP
   # mac2pw 00B052000001
   00B052000001 MLPB-YLQM-YSSL-BMBB

.PP
This example does the same thing but ommits the device address.

.PP
   # mac2pw 00B052000001 -q
   MLPB-YLQM-YSSL-BMBB

.PP
The following example prints 10 consecutive device addresses and passwords on stdout.
The starting device address is given and option \fB-n\fR specifies the number of addresses to print.
Output can be directed to a file.

.PP
   # mac2pw 00B052000001 -n 10
   00B052000001 MLPB-YLQM-YSSL-BMBB
   00B052000002 KSQJ-ZZFT-TNJL-VZIH
   00B052000003 HDFV-SEHB-LFWM-VLBF
   00B052000004 LBPL-NZSM-VPUC-XPLM
   00B052000005 JXDN-UYFQ-NISF-MIGH
   00B052000006 YPOS-UVDA-VMML-JBBP
   00B052000007 PJAO-DWSS-OQYL-XDTU
   00B052000008 SKVQ-CNRF-PUDM-WKZC
   00B052000009 YQTM-LHTJ-FYQC-YVNW
   00B05200000A KADM-CHII-KYVF-FQRZ

.PP
The following example prints 10 consecutive device addresses and passwords, as before, but starts from a different device address.
The address range here overlaps the range shown above but identical device addresses have identical passwords.

.PP
   # mac2pw 00B052000006 -n 10
   00B052000006 YPOS-UVDA-VMML-JBBP
   00B052000007 PJAO-DWSS-OQYL-XDTU
   00B052000008 SKVQ-CNRF-PUDM-WKZC
   00B052000009 YQTM-LHTJ-FYQC-YVNW
   00B05200000A KADM-CHII-KYVF-FQRZ
   00B05200000B YCZS-MVPX-VNFL-CLVZ
   00B05200000C PIBZ-DKMB-YMJL-QTMQ
   00B05200000D DPTA-HOEK-QERM-HJIY
   00B05200000E TMQQ-YFCW-OIVC-OGWO
   00B05200000F QUHL-PSQM-HHPF-PHLT

.PP
The following example prints 10 consecutive device addresses and passwords, as before, but changes the password length and letter grouping.
Option \fB-l\fR specifies \fB12\fR letters and option \fB-b\fR specifies a bunching factor of three.
Use a bunching factor of \fB0\fR to remove dashes.

.PP
   # mac2pw 00B052000006 -n 10 -l 12 -b 3
   00B052000006 YPO-SUV-DAV-MML
   00B052000007 PJA-ODW-SSO-QYL
   00B052000008 SKV-QCN-RFP-UDM
   00B052000009 YQT-MLH-TJF-YQC
   00B05200000A KAD-MCH-IIK-YVF
   00B05200000B YCZ-SMV-PXV-NFL
   00B05200000C PIB-ZDK-MBY-MJL
   00B05200000D DPT-AHO-EKQ-ERM
   00B05200000E TMQ-QYF-CWO-IVC
   00B05200000F QUH-LPS-QMH-HPF

.PP
The following example prints 10 consecutive device addresses and passwords but inserts a \fB0\fR at the start of each line to indicate that the address and password have not been used.
The Atheros Production Test System (PTS) will set the \fB0\fR to \fB1\fR after it programs a device.
This format is simlar to PTS DBBuilder Utility output.

.PP
   # mac2pw 00B052000006 -n 10 -u
   0 00B052000006 MLNX-JIAN-NERM-NIRR
   0 00B052000007 MBOR-ASNO-HLQJ-ZSFL
   0 00B052000008 NACT-DPWJ-MEVU-NMRX
   0 00B052000009 NYVC-DOVN-BLTH-OYZM
   0 00B05200000A NKMN-ZRVP-RERA-BSSA
   0 00B05200000B NMRT-KRNA-NLMJ-ADQT
   0 00B05200000C EVAL-BAWY-UEBN-RINO
   0 00B05200000D EUSE-QXOK-XLVN-TKMM
   0 00B05200000E EINV-GNUP-DEQM-CVSB
   0 00B05200000F EJAL-JSJF-GLNS-LLOD

.SH DISCLAIMER
Qualcomm Atheros reserves the right to modify program names, functionality, input format or output format in future toolkit releases without any obligation to notify or compensate toolkit users.

.SH SEE ALSO
.BR hpavkey ( 1 ),
.BR hpavkeys ( 1 ),
.BR keys ( 1 ),
.BR mac2pwd ( 1 ),
.BR rkey ( 1 )

.SH CREDITS
 Charles Maier <cmaier@qca.qualcomm.com>

