.TH mac2pwd 1 "November 2013" "open-plc-utils-0.0.3" "Qualcomm Atheros Open Powerline Toolkit"

.SH NAME
mac2pwd - Qualcomm Atheros Ethernet Device Password Generator

.SH SYNOPSIS
.BR mac2pwd
.RI [ options ] 
.IR file 
.RI [ file ]
[ ... ] 

.SH DESCRIPTION
Read Ethernet addresses from one or more files and print a unique password for each address.
Program output is suitable as input to the Qualcomm Atheros HomePlug AV Production Test System or may be used in custom production systems.
Input addresses can appear in any order and need not be consecutive.
Computed passwords consist of upper case letters and digits with optional group separators.
Output consists of address/password pairs in text format.

.PP
This program may be used to generate passwords for large numbers of non-consecutive MAC addresses that occur in unspecified order.
It complements program \fBmac2pw\fR which generates passwords for consecutive MAC addresses over a given range.

.PP
This program is part of the Qualcomm Atheros Powerline Toolkit.
See the \fBAMP\fR man page for an overview and installation instructions.

.SH CAVEATS
Atheros provides this program as a simple means of generating unique and apparently random device passwords for a large volume of Ethernet devices.
Two different password algorithms are implemented but neither one is required for HomePlug AV compliance.
Vendors are free to use other methods to generate their own device passwords and are encouraged to do so.

.TP 
Method 1
This method generates random passwords for each device based on system entropy. 
A different set of passwords is generated for a given address range with each program execution.
There is no correlation at between addresses and passwords.

This method is the most secure but requires care when programming and labelling devices at the factory.
It may be necessary to maintain a database if regular device maintenance and firmware upgrade are needed.

.TP 
Method 2
An optional method produces apparently random passwords based on device addresses.
The same set of passwords will be generated for a given address range with each program execution.
This method may be appropriate on system where regular maintenance and firmware upsates are required.

This method is less secure because device addresses can be determined using a variety of network management programs.
Anyone having access to this program, or the algorithm, could compute the device password and gain access to device features reserved for priviledged users.
This program does provide features to mitigate the risks of using this method.

.SH OPTIONS

.TP
-\fBb\fR \fIbunch\fR
The password bunching factor.
Passwords consists of \fIcount\fR uppercase letters and digits optionally displayed in groups separated by hyphens.
The bunching factor specifies the number of letters and digits in each group.
When \fibunch\fR is \fB0\fR or greater than \fIcount\fR, bunching is suppressed.
Any separating hyphens add to overall password length.
The minimum is \fB0\fR and the maximum is \fB255\fR.
The default is \fB0\fR which suppresses bunching.

When \fIbunch\fR is \fB0\fR, overall password length is \fIcount\fR.
When \fIbunch\fR is \fB1\fR, overall password length is twice \fIcount\fR because every other character will be a hyphen.

.TP
.RB - e
Compute passwords based on host system entropy.
Passwords consist of uppercase letters [A-Z] optionally grouped using option \fB-b\fR.
This method produces a repeatable set of unique, apparently random passwords over a given address range.
This method is the default and is more secure than method \fB-m\fR.

.TP
-\fBl \fIcount\fR
The number of letters in the password string.
The default \fBcount\fR is \fB16\fR.
Overall password length is the sum of \fBcount\fR plus the number of delimiters implied by \fBbunch\fR.

.TP
.RB - m
Compute passwords based on target device address.
Passwords consist of uppercase letters [A-Z].
This method produces a repeatable set of unique and apparently random passwords over a given address range.
This method is less secure than the default method \fB-e\fR.

.TP
.RB - q
Quiet mode.
Exclude the MAC address on output.
This option can be used in scripts to return the password associated with a given MAC address.

.TP
.RB - v
Verbose mode.
Prefix each line with a '0' column.
The Atheros Production Test System (PTS) uses the first column of a password database file to indicate which addresses and passwords have already been used.

.TP
.RB - ? ,-- help
Print program help information on stdout.
This option takes precedence over other options on the command line.

.TP
.RB - ! ,-- version
Print program version information on stdout.
This option takes precedence over other options on the command line.
Use this option when sending screen dumps to Atheros Technical Support so that they know exactly which version of the Linux Toolkit you are using.

.SH ARGUMENTS 

.TP
.IR file
The name of a file that contains Ethernet address strings.
Individual address strings consist of 12 consecutive hexadecimal digits.
Addresses are seperated by whites space.
This allows multiple addresses on a line.
There is no line length limit.
Punctuation is not permitted; however, a hash ('#') or semicolon (';') in any column starts comment text that continues to the end of that line.
An error in any input file terminates the program with an error message.

.SH EXAMPLES
An example input file, \fBmac.txt\fR, is shown below.
Comment lines document the file.
Blank lines are permitted and multiple addresses appear on one line.
This file contains 5 MAC addresses.
Punctuation is not permitted within a MAC address.

.PP
   # =================================
   # unused MAC addresses;
   # ---------------------------------
   00b052000004
   00b052BABE33
   00b052BABE34 00b052CAFE05
   00b052CAFE01

.PP
Another example input file, \fBmac2.txt\fR, appears below.
A hash ('#') and a semi-colon (';') are used to hide selected addresses.
Hidden addresses are ignored because they are comments.
This file contains 7 addresses but only 5 will be recognized.

.PP
   002b88ffff00
   002b887fff00
   # 002b88660066
   002b88660067
   002b88660063 ; 002b8800FFFF
   002b88660066

.PP
The following example reads the two files shown above and prints 10 addresses, 5 from each file, with associated passwords.
Output appears on the console but it could be directed to a file.

.PP
   # mac2pwd mac.txt more.mac 
   00B052000004 LBPL-NZSM-VPUC-XPLM
   00B052BABE33 KKDF-KLMC-JENV-NGFG
   00B052BABE34 FVPK-WQID-VVHY-ZHYQ
   00B052CAFE05 PCHK-EXLA-QEDY-DPJU
   00B052CAFE01 KDGB-ZVBQ-YLTF-ZCET
   002B88FFFF00 OIFX-KUHT-RUIN-MURF
   002B887FFF00 SPUU-KOJU-RXOA-ZORW
   002B88660067 BTQY-NMZL-WUNM-HSHW
   002B88660063 EJRX-AATI-YSMU-JWSG
   002B88660066 FOFC-LVAB-MTHH-TVNO

.PP
The following example is the same but prints output suitable for input to the Qualcomm Atheros PTS because option \fB-v\fR is specified.
The output format is similar to that produced by the Qualcomm Atheros DB Builder Utility for Windows.

.PP
   # mac2pwd -v mac.txt more.mac 
   0 00B052000004 LBPL-NZSM-VPUC-XPLM
   0 00B052BABE33 KKDF-KLMC-JENV-NGFG
   0 00B052BABE34 FVPK-WQID-VVHY-ZHYQ
   0 00B052CAFE05 PCHK-EXLA-QEDY-DPJU
   0 00B052CAFE01 KDGB-ZVBQ-YLTF-ZCET
   0 002B88FFFF00 OIFX-KUHT-RUIN-MURF
   0 002B887FFF00 SPUU-KOJU-RXOA-ZORW
   0 002B88660067 BTQY-NMZL-WUNM-HSHW
   0 002B88660063 EJRX-AATI-YSMU-JWSG
   0 002B88660066 FOFC-LVAB-MTHH-TVNO

.PP
The following example omits the MAC address from the output for clandestine cases where one does not want both the MAC address and the password to appear together.
It can also be used to generate random passwords for other purposes.

.PP
   # mac2pwd -q mac.txt more.mac 
   LBPL-NZSM-VPUC-XPLM
   KKDF-KLMC-JENV-NGFG
   FVPK-WQID-VVHY-ZHYQ
   PCHK-EXLA-QEDY-DPJU
   KDGB-ZVBQ-YLTF-ZCET
   OIFX-KUHT-RUIN-MURF
   SPUU-KOJU-RXOA-ZORW
   BTQY-NMZL-WUNM-HSHW
   EJRX-AATI-YSMU-JWSG
   FOFC-LVAB-MTHH-TVNO

.SH DISCLAIMER
Qualcomm Atheros reserves the right to modify program names, functionality, input format or output format in future toolkit releases without any obligation to notify or compensate toolkit users.

.SH SEE ALSO
.BR hpavkey ( 1 ),
.BR hpavkeys ( 1 ),
.BR keys ( 1 ),
.BR mac2pw ( 1 ),
.BR rkey ( 1 )

.SH CREDITS
 Charles Maier <cmaier@qca.qualcomm.com>

